name: Build & Publish Telert (Docker + VS Code)

on:
  push:
    branches: [ main ]   # every commit to main
    tags:     [ "v*" ]   # and every vX.Y.Z tag
  workflow_dispatch:      # manual trigger

jobs:
# ─────────────────────────────────────────────────────────────────────────────
# 1)  Build & push Docker image to ghcr.io
# ─────────────────────────────────────────────────────────────────────────────
  build-and-publish-docker:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write   # allows GITHUB_TOKEN to push to GHCR

    steps:
    - name: Checkout source
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Extract Docker metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ghcr.io/${{ github.repository_owner }}/telert
        tags: |
          # semver tags appear automatically only on tag pushes
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          # branch name (e.g. main, feature/foo)
          type=ref,event=branch
          # short commit SHA – always
          type=sha,format=short
        flavor: |
          latest=auto        # adds :latest only on default branch

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build & push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags:   ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to:   type=gha,mode=max

# ─────────────────────────────────────────────────────────────────────────────
# 2)  Build & publish VS Code extension (only on tags or manual)
# ─────────────────────────────────────────────────────────────────────────────
  build-and-publish-vscode:
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' || startsWith(github.ref, 'refs/tags/v')

    steps:
    - name: Checkout source
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20

    - name: Install vsce
      run: npm install -g @vscode/vsce

    - name: Sync extension version with tag (if needed)
      id: version
      run: |
        VERSION=$(node -p "require('./vscode-telert/package.json').version")
        if [[ "${GITHUB_REF}" == refs/tags/v* ]]; then
          TAG_VERSION="${GITHUB_REF#refs/tags/v}"
          if [[ "$VERSION" != "$TAG_VERSION" ]]; then
            echo "Updating VS Code extension version → $TAG_VERSION"
            cd vscode-telert
            npm version "$TAG_VERSION" --no-git-tag-version
          fi
          echo "EXT_VERSION=$TAG_VERSION" >> $GITHUB_OUTPUT
        else
          echo "EXT_VERSION=$VERSION" >> $GITHUB_OUTPUT
        fi

    - name: Build & package extension
      run: |
        cd vscode-telert
        npm ci
        vsce package

    - name: Publish to VS Code Marketplace
      env:
        VSCE_PAT: ${{ secrets.VSCODE_MARKETPLACE_TOKEN }}
      run: |
        cd vscode-telert
        vsce publish -p "$VSCE_PAT"

    - name: Upload VSIX as artifact
      uses: actions/upload-artifact@v4
      with:
        name: telert-vscode-${{ steps.version.outputs.EXT_VERSION }}.vsix
        path: vscode-telert/telert-vscode-${{ steps.version.outputs.EXT_VERSION }}.vsix
