name: Publish Docker & VS Code Extension

on:
  push:
    tags: ["v*"]
  workflow_dispatch:

jobs:
  build-and-publish-docker:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/navig-me/telert
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=ref,event=branch
            type=raw,value=latest,enable={{is.default}}
          flavor: |
            latest=auto
      
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
  
  build-and-publish-vscode:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      
      - name: Install vsce
        run: npm install -g @vscode/vsce
      
      - name: Extract version
        id: extract_version
        run: |
          VERSION=$(node -p "require('./vscode-telert/package.json').version")
          
          # Check if running from a tag or branch
          if [[ "${{ github.ref }}" == refs/tags/v* ]]; then
            # Running from a tag - extract version from tag
            TAG_VERSION=$(echo ${{ github.ref_name }} | sed 's/^v//')
            
            # Update vscode extension version to match tag if needed
            if [ "$VERSION" != "$TAG_VERSION" ]; then
              echo "Updating VS Code extension version from $VERSION to $TAG_VERSION"
              cd vscode-telert
              npm version $TAG_VERSION --no-git-tag-version
            fi
            echo "version=$TAG_VERSION" >> $GITHUB_OUTPUT
          else
            # Running from a branch - use existing package.json version
            echo "Using existing version $VERSION (running from branch)"
            echo "version=$VERSION" >> $GITHUB_OUTPUT
          fi
      
      - name: Build & Package Extension
        run: |
          cd vscode-telert
          npm ci
          vsce package
      
      - name: Publish to VS Code Marketplace
        run: |
          cd vscode-telert
          vsce publish -p ${{ secrets.VSCODE_MARKETPLACE_TOKEN }}
        if: success()
      
      - name: Upload VSIX as artifact
        uses: actions/upload-artifact@v4
        with:
          name: telert-vscode-${{ steps.extract_version.outputs.version }}.vsix
          path: vscode-telert/telert-vscode-${{ steps.extract_version.outputs.version }}.vsix